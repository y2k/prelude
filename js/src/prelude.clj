
(defmacro do [& body] (concat (list 'let (vector)) body))

(defmacro println [& args] (concat (list '.info 'console) args))
(defmacro eprintln [& args] (concat (list '.error 'console) args))

(defmacro def- [k v] (list 'def ^:private k v))

(defmacro FIXME [& args]
  (list 'throw
        (list 'Error.
              (concat
               (list
                'str
                (str "FIXME " __FILENAME__ ":" __LINE__ ":" (- __POSITION__ 1) " - "))
               args))))
(defmacro str [& args] (concat (list '+ "") args))

(defmacro jvm! [& body] (list 'comment body))

(defmacro js! [& body] (concat (list 'module) body))

(defmacro atom [x] (list '.of 'Array x))
(defmacro deref [x] (list 'get x 0))
(defmacro reset! [a x] (list 'do (list '.fill a x) x))
(defmacro swap! [a f] (list 'get (list '.splice a 0 1 (list f (list 'get a 0))) 0))

(defmacro not= [a b] (list 'not (list '= a b)))

;; JS prelude
(def __unsafe_insert_js 0)
(def - 0)
(def . 0)
(def * 0)
(def / 0)
(def % 0)
(def + 0)
(def < 0)
(def <= 0)
(def = 0)
(def > 0)
(def >= 0)
(def alert 0)
(def and 0)
(def assoc 0)
(def assoc! 0)
(def catch 0)
(def comment 0)
(def concat 0)
(def conj 0)
(def do 0)
(def export-default 0)
(def false 0)
(def first 0)
(def fn* 0)
(def get 0)
(def hash-map 0)
(def if 0)
(def let* 0)
(def merge 0)
(def new 0)
(def not 0)
(def null 0)
(def or 0)
(def quote 0)
(def second 0)
(def set! 0)
(def spread 0)
(def throw 0)
(def true 0)
(def try 0)
(def type 0)
(def vector 0)
(def while 0)

;; HTML
(def alert 0)
(def Array 0)
(def Buffer 0)
(def console 0)
(def crypto 0)
(def Date 0)
(def document 0)
(def Error 0)
(def eval 0)
(def fetch 0)
(def JSON 0)
(def Math 0)
(def Object 0)
(def parseInt 0)
(def process 0)
(def Promise 0)
(def RegExp 0)
(def Response 0)
(def setTimeout 0)
(def window 0)
